// Generated by view binder compiler. Do not edit!
package org.pytorch.demo.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.pytorch.demo.objectdetection.R;

public final class MoreInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final RelativeLayout contentContainer;

  @NonNull
  public final View ellipse20;

  @NonNull
  public final TextView home;

  private MoreInfoBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull RelativeLayout contentContainer,
      @NonNull View ellipse20, @NonNull TextView home) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.contentContainer = contentContainer;
    this.ellipse20 = ellipse20;
    this.home = home;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MoreInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MoreInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.more_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MoreInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = rootView.findViewById(id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      RelativeLayout contentContainer = (RelativeLayout) rootView;

      id = R.id.ellipse_20;
      View ellipse20 = rootView.findViewById(id);
      if (ellipse20 == null) {
        break missingId;
      }

      id = R.id.home;
      TextView home = rootView.findViewById(id);
      if (home == null) {
        break missingId;
      }

      return new MoreInfoBinding((RelativeLayout) rootView, bottomNavigationView, contentContainer,
          ellipse20, home);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
